version: "3.5"

networks:
  default:
    name: zkevm

volumes:
  state_db_data:
  pool_db_data:
  bridge_db_data:
  explorer_db_data:
  loki_data:

services:
  zkevm-state-db:
    container_name: zkevm-state-db
    restart: unless-stopped
    image: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
    ports:
      - 5432:5432
    volumes:
      - ./db/scripts/init_prover_db.sql:/docker-entrypoint-initdb.d/init.sql
      - state_db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=state_user
      - POSTGRES_PASSWORD=state_pass
      - POSTGRES_DB=state_db
    command:
      - "postgres"
      - "-N"
      - "500"

  zkevm-pool-db:
    container_name: zkevm-pool-db
    restart: unless-stopped
    image: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
    ports:
      - 5433:5432
    volumes:
      - pool_db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=pool_user
      - POSTGRES_PASSWORD=pool_password
      - POSTGRES_DB=pool_db
    command:
      - "postgres"
      - "-N"
      - "500"

  zkevm-bridge-db:
    container_name: zkevm-bridge-db
    restart: unless-stopped
    image: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
    ports:
      - 5435:5432
    environment:
      - POSTGRES_USER=bridge_user
      - POSTGRES_PASSWORD=bridge_password
      - POSTGRES_DB=bridge_db
    volumes:
      - bridge_db_data:/var/lib/postgresql/data
    command: ["postgres", "-N", "500"]

  zkevm-executor:
    container_name: zkevm-executor
    restart: unless-stopped
    image: hermeznetwork/zkevm-prover:v1.1.5-fork.4
    depends_on:
      zkevm-state-db:
        condition: service_healthy
    ports:
      - 50061:50061 
      - 50071:50071
    volumes:
      - ${ZKEVM_ADVANCED_CONFIG_DIR:-./config/environments/testnet}/public.prover.config.json:/usr/src/app/config.json
    command: >
      zkProver -c /usr/src/app/config.json

  zkevm-sync:
    container_name: zkevm-sync
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      zkevm-state-db:
        condition: service_healthy
      zkevm-executor:
        condition: service_started
    image: hermeznetwork/zkevm-node:v0.1.4
    volumes:
      - ${ZKEVM_ADVANCED_CONFIG_DIR:-./config/environments/testnet}/public.node.config.toml:/app/config.toml
      - ${ZKEVM_ADVANCED_CONFIG_DIR:-./config/environments/testnet}/public.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-node run --network custom --custom-network-file /app/genesis.json --cfg /app/config.toml --components synchronizer"

  zkevm-l2gaspricer:
    container_name: zkevm-l2gaspricer
    image: hermeznetwork/zkevm-node:v0.1.4
    restart: unless-stopped
    depends_on:
      zkevm-pool-db:
          condition: service_healthy
      zkevm-sync:
        condition: service_started
    environment:
      - ZKEVM_NODE_POOL_DB_HOST=zkevm-pool-db
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ${ZKEVM_CONFIG_DIR}/sequencer.keystore:/pk/keystore
      - ${ZKEVM_ADVANCED_CONFIG_DIR:-./config/environments/testnet}/public.node.config.toml:/app/config.toml
      - ${ZKEVM_ADVANCED_CONFIG_DIR:-./config/environments/testnet}/public.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-node run --network custom --custom-network-file /app/genesis.json --cfg /app/config.toml --components l2gaspricer"

  zkevm-eth-tx-manager:
    container_name: zkevm-eth-tx-manager
    restart: unless-stopped
    image: hermeznetwork/zkevm-node:v0.1.4
    depends_on:
      zkevm-state-db:
        condition: service_healthy
      zkevm-sync:
        condition: service_started

    ports:
      - 9094:9091
    environment:
      - ZKEVM_NODE_STATEDB_HOST=zkevm-state-db
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ${ZKEVM_CONFIG_DIR}/sequencer.keystore:/pk/sequencer.keystore
      - ${ZKEVM_CONFIG_DIR}/aggregator.keystore:/pk/aggregator.keystore
      - ${ZKEVM_ADVANCED_CONFIG_DIR:-./config/environments/testnet}/public.node.config.toml:/app/config.toml
      - ${ZKEVM_ADVANCED_CONFIG_DIR:-./config/environments/testnet}/public.genesis.config.json:/app/genesis.json
      - ./zkevm-node-fix-1:/app/zkevm-node-custom
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-node run --network custom --custom-network-file /app/genesis.json --cfg /app/config.toml --components eth-tx-manager"

  zkevm-rpc:
    container_name: zkevm-rpc
    restart: unless-stopped
    depends_on:
      zkevm-pool-db:
        condition: service_healthy
      zkevm-state-db:
        condition: service_healthy
      zkevm-sync:
        condition: service_started
    image: hermeznetwork/zkevm-node:v0.1.4
    ports:
      - 8545:8545
      - 9091:9091
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ${ZKEVM_ADVANCED_CONFIG_DIR:-./config/environments/testnet}/public.node.config.toml:/app/config.toml
      - ${ZKEVM_ADVANCED_CONFIG_DIR:-./config/environments/testnet}/public.genesis.config.json:/app/genesis.json
      - ./zkevm-node:/app/zkevm-node-custom
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-node run --network custom --custom-network-file /app/genesis.json --cfg /app/config.toml --components rpc --http.api eth,net,debug,zkevm,txpool,web3"

  zkevm-sequencer:
    container_name: zkevm-sequencer
    restart: unless-stopped
    image: hermeznetwork/zkevm-node:v0.1.4
    depends_on:
      zkevm-pool-db:
        condition: service_healthy
      zkevm-state-db:
        condition: service_healthy
      zkevm-executor:
        condition: service_started
      zkevm-sync:
        condition: service_started
    ports:
      - 9092:9091
      - 6060:6060
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ${ZKEVM_CONFIG_DIR}/sequencer.keystore:/pk/sequencer.keystore
      - ${ZKEVM_ADVANCED_CONFIG_DIR:-./config/environments/testnet}/public.node.config.toml:/app/config.toml
      - ${ZKEVM_ADVANCED_CONFIG_DIR:-./config/environments/testnet}/public.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-node run --network custom --custom-network-file /app/genesis.json --cfg /app/config.toml --components sequencer,sequence-sender"

  zkevm-aggregator:
    container_name: zkevm-aggregator
    image: hermeznetwork/zkevm-node:v0.1.4
    restart: unless-stopped
    depends_on:
      zkevm-pool-db:
        condition: service_healthy
      zkevm-state-db:
        condition: service_healthy
      zkevm-sync:
        condition: service_started
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 50081:50081
      - 9093:9091
    volumes:
      - ${ZKEVM_ADVANCED_CONFIG_DIR:-./config/environments/testnet}/public.node.config.toml:/app/config.toml
      - ${ZKEVM_ADVANCED_CONFIG_DIR:-./config/environments/testnet}/public.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-node run --network custom --custom-network-file /app/genesis.json --cfg /app/config.toml --components aggregator"

  zkevm-explorer-l2:
    container_name: zkevm-explorer-l2
    restart: unless-stopped
    image: hermeznetwork/zkevm-explorer:latest
    ports:
      - 4004:4004
    environment:
      - PORT=4004
      - NETWORK=POE
      - SUBNETWORK=Polygon zkEVM
      - CHAIN_ID=44444
      - COIN=ETH
      - ETHEREUM_JSONRPC_VARIANT=geth
      - ETHEREUM_JSONRPC_HTTP_URL=http://zkevm-rpc:8545
      - DATABASE_URL=postgres://l2_explorer_user:l2_explorer_password@zkevm-explorer-l2-db:5432/explorer
      - ECTO_USE_SSL=false
      - MIX_ENV=prod
      - LOGO=/images/blockscout_logo.svg
      - LOGO_FOOTER=/images/blockscout_logo.svg
      - SUPPORTED_CHAINS=[]
      - SHOW_OUTDATED_NETWORK_MODAL=false
    command: ["/bin/sh", "-c", "mix do ecto.create, ecto.migrate; mix phx.server"]
    depends_on:
      zkevm-explorer-l2-db:
        condition: service_healthy
  zkevm-explorer-l2-db:
    container_name: zkevm-explorer-l2-db
    restart: unless-stopped
    image: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
    environment:
      - POSTGRES_USER=l2_explorer_user
      - POSTGRES_PASSWORD=l2_explorer_password
      - POSTGRES_DB=l2_explorer_db
    volumes:
      - explorer_db_data:/var/lib/postgresql/data
    command: [ "postgres", "-N", "500" ]

  

  zkevm-bridge-service:
    container_name: zkevm-bridge-service
    image: hermeznetwork/zkevm-bridge-service:v0.1.0
    restart: unless-stopped
    depends_on:
      zkevm-bridge-db:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 9090:9090
      - 8081:8080
    volumes:
      - ${ZKEVM_CONFIG_DIR}/sequencer.keystore:/pk/sequencer.keystore
      - ${ZKEVM_ADVANCED_CONFIG_DIR:-./config/environments/testnet}/public.node.config.toml:/app/config.toml
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-bridge run --cfg /app/config.toml"
  zkevm-bridge-ui:
    container_name: zkevm-bridge-ui
    image: hermeznetwork/zkevm-bridge-ui:latest
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 8080:80
    environment:
      - ETHEREUM_RPC_URL=http://54.85.85.47:8845
      - ETHEREUM_EXPLORER_URL=https://goerli.etherscan.io
      - ETHEREUM_BRIDGE_CONTRACT_ADDRESS=0x8Ed000718148edDF8E698FBA80d7Fef9dda2f81b
      - ETHEREUM_FORCE_UPDATE_GLOBAL_EXIT_ROOT=true
      - ETHEREUM_PROOF_OF_EFFICIENCY_CONTRACT_ADDRESS=0x556861Fa23Db6EaC0994551F26b9E10E8EA961b4
      - POLYGON_ZK_EVM_RPC_URL=http://44.206.128.109:8545
      - POLYGON_ZK_EVM_EXPLORER_URL=http://44.206.128.109:4004
      - POLYGON_ZK_EVM_BRIDGE_CONTRACT_ADDRESS=0x8Ed000718148edDF8E698FBA80d7Fef9dda2f81b
      - POLYGON_ZK_EVM_NETWORK_ID=1
      - BRIDGE_API_URL=http://44.206.128.109:8081
      - ENABLE_FIAT_EXCHANGE_RATES=false
      - ENABLE_OUTDATED_NETWORK_MODAL=false
      - ENABLE_DEPOSIT_WARNING=true
      - ENABLE_REPORT_FORM=false

  zkevm-prover-server:
    container_name: zkevm-prover-server
    image: hermeznetwork/zkevm-prover:v1.1.5-fork.4
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 20G
    depends_on:
      zkevm-state-db:
        condition: service_healthy
    ports:
      - 50051:50051
    volumes:
    #  - ~/v1.1.0-rc.1-fork.4/config:/mnt/prover/config:ro
     - ~/zkevm/config.json:/app/config.json
    command: "zkProver -c /app/config.json"

  grafana:
    container_name: grafana
    image: grafana/grafana-oss
    volumes:
      - ./observability/datasources.yml:/etc/grafana/provisioning/datasources/default.yml:ro
      - ./observability/dashboards.yml:/etc/grafana/provisioning/dashboards/default.yml:ro
      - ./observability/dashboard-dockers.json:/etc/grafana/provisioning/dashboards/dashboard-dockers.json:ro
      - ./observability/dashboard-node.json:/etc/grafana/provisioning/dashboards/dashboard-node.json:ro
      - ./observability/dashboard-logs.json:/etc/grafana/provisioning/dashboards/dashboard-logs.json:ro
    environment:
      - GF_SECURITY_ADMIN_USER=zkevm
      - GF_SECURITY_ADMIN_PASSWORD=zkevm
    ports:
      - 3000:3000
    depends_on:
      - telegraf
      - loki
      - grafana-db
  loki:
    container_name: loki
    image: grafana/loki:latest
    restart: unless-stopped
    user: root
    ports:
      - "3100:3100"
    volumes:
      - ./observability/loki-config.yaml:/etc/loki/loki-config.yaml:ro
      - loki_data:/data/loki
    command: -config.file=/etc/loki/loki-config.yaml 
  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    restart: unless-stopped
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./observability/promtail-config.yaml:/etc/promtail/promtail-config.yaml:ro
    command: -config.file=/etc/promtail/promtail-config.yaml
    depends_on:
      - loki

  telegraf:
    container_name: telegraf
    image: telegraf
    volumes:
      - ./observability/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - POSTGRES_HOST=grafana-db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=grafana
    depends_on:
      - grafana-db
      - zkevm-rpc

  grafana-db:
    container_name: grafana-db
    image: postgres:15
    expose:
      - 5432
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=grafana

  zkevm-metrics:
    image: prom/prometheus:v2.39.1
    container_name: zkevm-metrics
    restart: unless-stopped
    ports:
      - 9099:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-lifecycle
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus.yml:ro
